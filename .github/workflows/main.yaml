name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

env:
  REGION: ${{ secrets.GCP_REGION }}
  GAR_REPO_ID: ${{ secrets.GAR_REPO_ID }}
  GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  CLUSTER_NAME: ${{ secrets.CLUSTER_NAME }}
  HELM_RELEASE: petclinic
  HELM_CHART_DIR: ~/helm
  IMAGE_NAME: spring-petclinic

jobs:
  build-and-tag:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.tag.outputs.version }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install semver
        run: pip install semver

      - name: Generate Git Tag
        id: tag
        run: |
          python semver_tag.py  # this should export version to GitHub env

      - name: Authenticate to GCP
        uses: google-github-actions/auth@v1
        with:
          token_format: 'access_token'
          workload_identity_provider: 'projects/999898490929/locations/global/workloadIdentityPools/github-pool/providers/github-provider'
          service_account: 'mavoyan-github-actions@capstoneproject-460317.iam.gserviceaccount.com'

      - name: Configure Docker for Artifact Registry
        run: |
          gcloud auth configure-docker ${{ env.REGION }}-docker.pkg.dev

      - name: Build and Push Docker Image
        run: |
          IMAGE=${{ env.REGION }}-docker.pkg.dev/${{ env.GCP_PROJECT_ID }}/${{ env.GAR_REPO_ID }}/${{ env.IMAGE_NAME }}
          docker build -t $IMAGE:${{ steps.tag.outputs.version }} .
          docker push $IMAGE:${{ steps.tag.outputs.version }}

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-tag

    steps:
      - name: Copy Helm chart to VM
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.VM_EXTERNAL_IP }}
          username: ${{ secrets.VM_USER }}
          key: ${{ secrets.VM_SSH_KEY }}
          source: "./helm/petclinic"
          target: "~/helm"
    
      - name: SSH into GCE and deploy Helm
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.VM_EXTERNAL_IP }}
          username: ${{ secrets.VM_USER }}
          key: ${{ secrets.VM_SSH_KEY }}
          script: |
            export CLUSTER_NAME=${{ env.CLUSTER_NAME }}
            export REGION=${{ env.REGION }}
            export GCP_PROJECT_ID=${{ env.GCP_PROJECT_ID }}
            export HELM_RELEASE=${{ env.HELM_RELEASE }}
            export HELM_CHART_DIR=${{ env.HELM_CHART_DIR }}
            export VERSION=${{ needs.build-and-tag.outputs.version }}
            export IMAGE=${{ env.REGION }}-docker.pkg.dev/${{ env.GCP_PROJECT_ID }}/${{ env.GAR_REPO_ID }}/${{ env.IMAGE_NAME }}

            echo "Authenticating to GKE..."
            gcloud container clusters get-credentials $CLUSTER_NAME --region $REGION --project $GCP_PROJECT_ID

            echo "Deploying Helm chart..."
            helm upgrade --install $HELM_RELEASE $HELM_CHART_DIR \
              --set image.tag=$VERSION \
              --set image.repository=$IMAGE

            echo "Waiting for External IP..."
            for i in {1..20}; do
              NODE_IP=$(kubectl get svc $HELM_RELEASE --namespace mavoyan --output=jsonpath='{.status.loadBalancer.ingress[0].ip}')
              if [[ -n "$NODE_IP" ]]; then break; fi
              sleep 10
            done

            if [[ -n "$NODE_IP" ]]; then
              echo "Application available at http://$NODE_IP"
            else
              echo "External IP not assigned." >&2
              exit 1
            fi
